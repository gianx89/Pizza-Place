package it.sabato.pizzeria.exception;

import it.sabato.pizzeria.dto.ErrorDTO;
import org.apache.commons.lang3.StringUtils;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.context.request.WebRequest;
import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;

import javax.naming.ConfigurationException;

/**
 * The type Rest response entity exception handler.
 * It handles {@link javax.naming.ConfigurationException} exceptions generated by REST controllers.
 * @author Gianluca Sabato
 */
@ControllerAdvice
public class RestResponseEntityExceptionHandler extends ResponseEntityExceptionHandler {
    /**
     * Handle configuration exception response entity for {@link javax.naming.ConfigurationException}.
     *
     * @param ex      the ex
     * @param request the request
     * @return the response entity
     * @author Gianluca Sabato
     */
    @ExceptionHandler(value = {ConfigurationException.class})
    public ResponseEntity<Object> handleConfigurationException(ConfigurationException ex, WebRequest request) {
        ErrorDTO errorDTO = new ErrorDTO();
        errorDTO.setType("about:blank");
        errorDTO.setTitle(HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());
        errorDTO.setStatus(HttpStatus.INTERNAL_SERVER_ERROR.value());
        errorDTO.setDetail(ex.getMessage());

        String[] split = StringUtils.split(request.getDescription(false), "=");
        errorDTO.setInstance(split[1]);

        return handleExceptionInternal(ex, errorDTO, new HttpHeaders(), HttpStatus.INTERNAL_SERVER_ERROR, request);
    }
}
